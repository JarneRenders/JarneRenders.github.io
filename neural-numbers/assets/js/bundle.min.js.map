{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/BarChart.js","js/Controller.js","js/IdleDetector.js","js/LangSwitcher.js","js/MnistData.js","js/NeuralNetwork.js","js/Paint.js","js/SlideShow.js","js/TrainingVisualization.js","js/ValidationPreview.js","js/i18nController.js","js/main-babel.js","js/main.js","js/slide-controllers/design-network.js","js/slide-controllers/intro.js","js/slide-controllers/training.js","js/slide-controllers/what-is-training-data.js","js/slide.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","BarChart","el","_classCallCheck","this","cleanup","bars","cbarcontainer","document","createElement","className","classList","add","cbartext","innerHTML","concat","appendChild","firstChild","removeChild","probabilities","highlighted","arguments","undefined","dataset","probability","style","toggle","_Paint","_interopRequireDefault","_MnistData","_NeuralNetwork","_ValidationPreview","Controller","config","data","MnistData","dataloaded","testpaint","paintel","trainedmodel","tf","loadLayersModel","modelPath","paint","paintClearTimeout","load","els","loadData","vp","nn","model","visualization","initValidationImages","updateValidationImages","updateAccuracy","modelid","optimizerid","learningRate","activation","setup","clearDelayedTrainStepPreview","train","cb","pauseTraining","delayedTrainStepPreview","trainSingleStep","cleanupValidationPreview","cleanupPaint","cleanupNetwork","initTrainingEnvironment","_this","traintimeout","setTimeout","predict","lastTrainStepTimeout","clearTimeout","toggleTraining","training","acc","addAccuracyCallback","defaultConstructorParams","eventTypes","domElement","IdleDetector","params","_Object$assign","Object","assign","_eventTypes","_domElement","_timeOfLastEvent","_maxId","_timers","_nonIdleHandler","reset","_this2","forEach","type","addEventListener","_this3","removeEventListener","repeat","func","timeoutDelay","_len","args","Array","_key","keys","_init","id","timers","timer","windowTimeoutId","callback","apply","window","bind","clear","delete","intervalDelay","_len2","_key2","hasFired","windowIntervalId","intervalCallback","setInterval","clearInterval","_len3","_key3","_setTimeoutInternal","_len4","_key4","_len5","_key5","_setIntervalInternal","_len6","_key6","_deinit","performance","now","values","LangSwitcher","container","langChangeCallback","menuVisible","render","element","trigger","setAttribute","mask","menu","entries","languages","_ref","_ref2","_slicedToArray","name","item","link","innerText","ev","preventDefault","bottom","clientHeight","hideMenu","showMenu","stopPropagation","remove","IMAGE_SIZE","NUM_TRAIN_ELEMENTS","NUM_DATASET_ELEMENTS","shuffledTrainIndex","shuffledTestIndex","img","Image","canvas","ctx","getContext","imgRequest","Promise","resolve","reject","crossOrigin","onload","width","naturalWidth","height","naturalHeight","datasetBytesBuffer","ArrayBuffer","datasetBytesView","Float32Array","drawImage","imageData","getImageData","j","datasetImages","src","labelsRequest","fetch","all","labelsResponse","Uint8Array","arrayBuffer","datasetLabels","trainIndices","util","createShuffledIndices","testIndices","trainImages","slice","testImages","trainLabels","NUM_CLASSES","testLabels","batchSize","nextBatch","index","batchImagesArray","batchLabelsArray","idx","image","set","label","xs","tensor2d","labels","_TrainingVisualization","NeuralNetwork","console","log","trainedimages","lastrainedimages","pausecbs","trainingProgress","dispose","sequential","layers","conv2d","inputShape","kernelSize","filters","strides","kernelInitializer","maxPooling2d","poolSize","flatten","dense","units","optimizer","adam","sgd","compile","loss","metrics","TRAIN_DATA_SIZE","BATCH_SIZE","setBackend","tidy","d","nextTrainBatch","reshape","trainXs","trainYs","setCurrentTraining","fit","callbacks","onEpochEnd","_onEpochEnd","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","onBatchEnd","_onBatchEnd","_callee2","_context2","trainByBatchFromData","Math","min","pop","push","addPauseCallback","_BarChart","SCALE_FACTOR","LINEWIDTH","Paint","outputThreshold","nwvis","clearTimeoutTime","drawingChanged","pos","x","y","createUI","empty","isdown","pointerId","eventname","eventfunctions","pointerdown","removeClearTimeout","setPosition","pointermove","draw","pointerup","setClearTimeout","pointerleave","pointercancel","drawcanvas","passive","querySelector","normalizecanvas","outputbars","outputdigit","inputbox","addEventListeners","updateDimensions","floor","clientWidth","onresize","drawcontext","normalizecontext","barchart","rect","getBoundingClientRect","clientX","left","clientY","top","ox","oy","nx","ny","abs","beginPath","lineWidth","lineCap","strokeStyle","moveTo","lineTo","stroke","fillStyle","fillRect","normalize","SKIPFACTOR","boxsize","centerx","centery","right","totalweight","max","_tf$tidy2","predicted","_this4","imageTensor","browser","fromPixels","toFloat","mul","scalar","clipByValue","show","filter","k","result","dataSync","argMax","update","parentElement","removeEventListeners","_slide","SlideShow","controller","createEventMask","slides","from","querySelectorAll","map","getAttribute","currentSlide","currentSlideController","onhashchange","maskEvents","doSlideChange","unmaskEvents","event","key","goPrevious","goNext","eventMask","position","zIndex","pointerEvents","backgroundColor","display","body","goTo","currentID","indexOf","getCurrentSlide","includes","location","hash","substring","childNodes","btn","slide","onExit","open","nav","menuItem","onEnter","SlideClass","getClass","TrainingVisualization","currentDigit","currentProbabilities","network","acanvas","activations","actx","icanvas","input","ictx","traindigit","lt1","lt2","renderNetwork","renderActivations","arr","b","target","m","ccnt","findthreshold","N","M","weights","x0","y0","lastthreshold","threshold","nodeA","nodeB","val","globalAlpha","bezierCurveTo","radius","fill","cval","arc","PI","getWeights","w","clearRect","drawdenselayer","HEIGHT","XOFFSET","active","imageSmoothingEnabled","currentTarget","drawnodes","intermediateActivations","trainX1","toPixels","computeActivations","trainY1","pixels","A1","A2","A3","_A3$argMax$dataSync2","prediction","_prediction$argMax$da2","ValidationPreview","displayedAccuracy","accuracy","isanimating","acccbs","validationImages","digittext","digitcontainer","examples","nextTestBatch","examplelabels","shape","testxs","TEST_DATA_SIZE","testXs","testYs","evaluate","validationAccuracy","round","requestAnimationFrame","animate","I18nControler","defaultLanguage","IMAGINARY","i18n","init","queryStringVariable","translationsDirectory","then","setLang","path","getLang","response","status","text","statusText","content","err","error","_Controller","_IdleDetector","_SlideShow","_i18nController","_LangSwitcher","configDefaults","idleReload","en","defaultConfigUrl","URL","href","configUrl","urlSearchParams","URLSearchParams","search","has","customConfigName","get","whitelistRegex","test","toString","getCustomConfigUrl","cache","json","setLanguage","reload","aElement","DesignNetworkSlide","isBusy","istraining","select","option","value","resetadvancedoptions","updateUI","pr","onpointerdown","ooption","resetadvancednetwork","abrupt","singleStep","_callee3","_context3","resetTraining","_callee4","_context4","pow","toPrecision","resetNetwork","rateSlider","rateLabel","oninput","rate","onchange","_callee5","_context5","registerClass","IntroSlide","initIntroPaint","TrainingSlide","WhatIsTrainingDataSlide","Slide","slideClasses","slideClass"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class BarChart {\n  constructor(el) {\n    this.el = el;\n    // cleanup potentially previously existing bars\n    this.cleanup();\n\n    this.bars = [];\n    for (let i = 0; i < 10; i += 1) {\n      const cbarcontainer = document.createElement('div');\n      cbarcontainer.className = 'barcontainer';\n      this.bars[i] = document.createElement('div');\n      this.bars[i].classList.add('bar');\n      const cbartext = document.createElement('div');\n      cbartext.className = 'bartxt';\n      cbartext.innerHTML = `${i}`;\n      cbarcontainer.appendChild(this.bars[i]);\n      cbarcontainer.appendChild(cbartext);\n      this.el.appendChild(cbarcontainer);\n    }\n  }\n\n  cleanup() {\n    while (this.el.firstChild) {\n      this.el.removeChild(this.el.firstChild);\n    }\n  }\n\n  update(probabilities, highlighted = -1) {\n    for (let i = 0; i < 10; i += 1) {\n      this.bars[i].dataset.probability = probabilities[i];\n      this.bars[i].style = `--probability: ${probabilities[i]}`;\n      this.bars[i].classList.toggle('highlighted', i === highlighted);\n    }\n  }\n}\n","/* globals tf */\nimport Paint from './Paint.js';\nimport { MnistData } from './MnistData.js';\nimport NeuralNetwork from './NeuralNetwork.js';\nimport ValidationPreview from './ValidationPreview.js';\n\nexport default class Controller {\n  constructor(config) {\n    this.config = config;\n    this.data = new MnistData();\n    this.dataloaded = false;\n    this.testpaint = true;\n  }\n\n  async initIntroPaint(paintel) {\n    if (!this.trainedmodel) {\n      this.trainedmodel = await tf.loadLayersModel(this.config.modelPath);\n    }\n    this.paint = new Paint(\n      paintel,\n      this.trainedmodel,\n      0.5,\n      false,\n      this.config.paintClearTimeout);\n  }\n\n  async loadData() {\n    if (!this.trainedmodel) {\n      this.trainedmodel = await tf.loadLayersModel(this.config.modelPath);\n    }\n    if (!this.dataloaded) {\n      await this.data.load();\n      this.dataloaded = true;\n    }\n  }\n\n  async initTrainingEnvironment(els) {\n    await this.loadData();\n    this.vp = new ValidationPreview(this.data, els);\n    this.nn = new NeuralNetwork(this.vp, els);\n    this.paint = new Paint(\n      els.paint,\n      this.nn.model,\n      0,\n      this.nn.visualization,\n      this.config.paintClearTimeout\n    );\n\n    await this.vp.initValidationImages(els);\n    // this.nn might have been deleted because in the meanwhile the slide has been skipped\n    if (this.nn) {\n      this.vp.updateValidationImages(this.nn.model);\n      this.vp.updateAccuracy(this.nn.model);\n    }\n  }\n\n  resetNetwork(modelid, optimizerid, learningRate, activation) {\n    if (this.nn) {\n      this.nn.setup(modelid, optimizerid, learningRate, activation);\n      this.paint.model = this.nn.model;\n    }\n  }\n\n  async startTraining() {\n    this.clearDelayedTrainStepPreview();\n    this.testpaint = false;\n    if (this.nn) {\n      await this.nn.train(this.data);\n    }\n  }\n\n  async pauseTraining(cb) {\n    if (this.nn) {\n      await this.nn.pauseTraining();\n      this.delayedTrainStepPreview(cb);\n    }\n  }\n\n  async singleStep(cb) {\n    if (this.nn) {\n      this.testpaint = false;\n      await this.nn.trainSingleStep(this.data);\n      this.delayedTrainStepPreview(cb);\n    }\n  }\n\n  async resetTraining(els) {\n    await this.pauseTraining();\n    this.cleanupValidationPreview();\n    this.cleanupPaint();\n    this.cleanupNetwork();\n    await this.initTrainingEnvironment(els);\n    this.testpaint = true;\n  }\n\n  delayedTrainStepPreview(cb) {\n    this.clearDelayedTrainStepPreview();\n    this.traintimeout = setTimeout(() => {\n      this.testpaint = true;\n      if (this.paint) this.paint.predict();\n      if (cb) cb();\n    }, this.config.lastTrainStepTimeout * 1000);\n  }\n\n  clearDelayedTrainStepPreview() {\n    if (this.traintimeout) {\n      clearTimeout(this.traintimeout);\n    }\n  }\n\n  toggleTraining(cb) {\n    this.clearDelayedTrainStepPreview();\n    if (this.nn) {\n      this.nn.toggleTraining(this.data);\n      this.testpaint = false;\n      if (!this.nn.training) {\n        this.delayedTrainStepPreview(cb);\n      }\n    }\n  }\n\n  cleanupNetwork() {\n    if (this.nn) {\n      this.nn.cleanup();\n      delete this.nn;\n    }\n  }\n\n  cleanupValidationPreview() {\n    if (this.vp) {\n      this.vp.cleanup();\n      delete this.vp;\n    }\n  }\n\n  cleanupPaint() {\n    if (this.paint) {\n      this.paint.cleanup();\n      delete this.paint;\n    }\n  }\n\n  addAccuracyCallback(acc, cb) {\n    this.vp.addAccuracyCallback(acc, cb);\n  }\n}\n","/* eslint-disable no-underscore-dangle,no-param-reassign */\n/*\nwritten by Christian Stussak, licensed under the Apache License 2.0.\ncopy from https://github.com/IMAGINARY/content-slider/blob/master/js/IdleDetector.js\n*/\n\nconst defaultConstructorParams = {\n  eventTypes: [\n    'pointerdown',\n    // 'pointermove',\n    'pointerup',\n    'pointercancel',\n    'keydown',\n    'keyup',\n  ],\n  domElement: document,\n};\n\nexport default class IdleDetector {\n  constructor(params = {}) {\n    const {\n      eventTypes,\n      domElement,\n    } = Object.assign(Object.assign({}, defaultConstructorParams), params);\n    this._eventTypes = eventTypes;\n    this._domElement = domElement;\n    this._timeOfLastEvent = 0;\n    this._maxId = 0;\n    this._timers = {};\n    this._nonIdleHandler = () => {\n      this.reset();\n    };\n  }\n\n  _init() {\n    this._eventTypes.forEach(type => this._domElement.addEventListener(\n      type, this._nonIdleHandler, true\n    ));\n  }\n\n  _deinit() {\n    this._eventTypes.forEach(type => this._domElement.removeEventListener(\n      type, this._nonIdleHandler, true\n    ));\n  }\n\n  _setTimeoutInternal(repeat, func, timeoutDelay, ...args) {\n    // event handlers should only be active if there are pending timeouts\n    if (Object.keys(this._timers).length === 0) {\n      this._init();\n    }\n\n    if (typeof timeoutDelay === 'undefined') {\n      timeoutDelay = 0;\n    }\n    this._maxId += 1;\n    const id = this._maxId;\n    const timers = this._timers;\n    const timer = {\n      id,\n      repeat,\n      timeoutDelay,\n      windowTimeoutId: 0,\n      callback() {\n        if (!repeat) {\n          this.delete();\n        }\n        func(...args);\n      },\n      reset() {\n        window.clearTimeout(this.windowTimeoutId);\n        this.windowTimeoutId = window.setTimeout(this.callback.bind(this), this.timeoutDelay);\n      },\n      clear() {\n        window.clearTimeout(this.windowTimeoutId);\n        this.windowTimeoutId = 0;\n      },\n      delete() {\n        this.clear();\n        delete timers[id];\n      },\n    };\n    timers[id] = timer;\n    timer.reset();\n    return id;\n  }\n\n  _setIntervalInternal(repeat, func, intervalDelay, timeoutDelay, ...args) {\n    // event handlers should only be active if there are pending timeouts\n    if (Object.keys(this._timers).length === 0) {\n      this._init();\n    }\n\n    if (typeof intervalDelay === 'undefined') {\n      intervalDelay = 0;\n    }\n    if (typeof timeoutDelay === 'undefined') {\n      timeoutDelay = intervalDelay;\n    }\n    this._maxId += 1;\n    const id = this._maxId;\n    const timers = this._timers;\n    const timer = {\n      id,\n      repeat,\n      hasFired: false,\n      timeoutDelay,\n      intervalDelay,\n      windowTimeoutId: 0,\n      windowIntervalId: 0,\n      callback() {\n        func(...args)\n        this.hasFired = true;\n      },\n      intervalCallback() {\n        this.windowIntervalId = window.setInterval(this.callback, this.intervalDelay);\n        this.callback();\n      },\n      reset() {\n        this.clear();\n        if (!this.repeat && this.hasFired) {\n          this.delete();\n        } else {\n          this.windowTimeoutId = window.setTimeout(\n            this.intervalCallback.bind(this), this.timeoutDelay\n          );\n        }\n      },\n      clear() {\n        window.clearTimeout(this.windowTimeoutId);\n        window.clearInterval(this.windowIntervalId);\n        this.windowTimeoutId = 0;\n        this.windowIntervalId = 0;\n      },\n      delete() {\n        this.clear();\n        delete timers[id];\n      },\n    };\n    timers[id] = timer;\n    timer.reset();\n    return id;\n  }\n\n  setTimeout(func, timeoutDelay, ...args) {\n    return this._setTimeoutInternal(true, func, timeoutDelay, ...args);\n  }\n\n  setTimeoutOnce(func, timeoutDelay, ...args) {\n    return this._setTimeoutInternal(false, func, timeoutDelay, ...args);\n  }\n\n  setInterval(func, intervalDelay, timeoutDelay, ...args) {\n    return this._setIntervalInternal(true, func, intervalDelay, timeoutDelay, ...args);\n  }\n\n  setIntervalOnce(func, intervalDelay, timeoutDelay, ...args) {\n    return this._setIntervalInternal(false, func, intervalDelay, timeoutDelay, ...args);\n  }\n\n  clearTimeout(id) {\n    if (typeof this._timers[id] !== 'undefined') {\n      this._timers[id].delete();\n    }\n\n    // event handlers should only be active if there are pending timeouts\n    if (Object.keys(this._timers).length === 0) {\n      this._deinit();\n    }\n  }\n\n  clearInterval(id) {\n    this.clearTimeout(id);\n  }\n\n  /**\n   * Interrupt the idle state and restart the timeouts and intervals.\n   */\n  reset() {\n    this._timeOfLastEvent = performance.now();\n    Object.values(this._timers).forEach(timer => timer.reset());\n  }\n\n  /**\n   * Clear all timeouts and intervals.\n   */\n  clear() {\n    Object.values(this._timers).forEach(timer => timer.delete());\n    this._deinit();\n  }\n\n  /**\n   * Return the time in ms since the last interruption of the idle state\n   * if there is at least one active (interval) timeout\n   * registered. Otherwise returns -1;\n   * @returns {number}\n   */\n  getIdleTime() {\n    if (Object.keys(this._timers).length === 0) {\n      return -1;\n    }\n    return performance.now() - this._timeOfLastEvent;\n  }\n}\n","export default class LangSwitcher {\n  constructor(container, config, langChangeCallback) {\n    this.menuVisible = false;\n    this.container = container;\n    this.config = config;\n    this.langChangeCallback = langChangeCallback;\n\n    this.render();\n  }\n\n  render() {\n    this.element = document.createElement('div');\n    this.element.classList.add('lang-switcher');\n\n    this.trigger = document.createElement('button');\n    this.trigger.setAttribute('type', 'button');\n    this.trigger.classList.add('lang-switcher-trigger');\n    this.element.appendChild(this.trigger);\n\n    const mask = document.createElement('div');\n    mask.classList.add('lang-switcher-menu-mask');\n    this.element.appendChild(mask);\n\n    this.menu = document.createElement('ul');\n    this.menu.classList.add('lang-switcher-menu');\n    mask.appendChild(this.menu);\n\n    Object.entries(this.config.languages).forEach(([code, name]) => {\n      const item = document.createElement(('li'));\n      const link = document.createElement('button');\n      link.setAttribute('type', 'button');\n      link.innerText = name;\n      link.addEventListener('pointerdown', (ev) => {\n        this.langChangeCallback(code);\n        ev.preventDefault();\n      });\n      item.appendChild(link);\n      this.menu.appendChild(item);\n    });\n\n    this.container.appendChild(this.element);\n\n    this.menu.style.bottom = `${this.menu.clientHeight * -1 - 10}px`;\n\n    window.document.addEventListener('pointerdown', (ev) => {\n      if (this.menuVisible) {\n        this.hideMenu();\n      }\n    });\n    this.trigger.addEventListener('pointerdown', (ev) => {\n      if (!this.menuVisible) {\n        this.showMenu();\n        ev.stopPropagation();\n      }\n    });\n  }\n\n  showMenu() {\n    this.menuVisible = true;\n    this.menu.classList.add('visible');\n  }\n\n  hideMenu() {\n    this.menuVisible = false;\n    this.menu.classList.remove('visible');\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst IMAGE_SIZE = 784;\nconst NUM_CLASSES = 10;\nconst NUM_DATASET_ELEMENTS = 65000;\n\nconst NUM_TRAIN_ELEMENTS = NUM_DATASET_ELEMENTS*0.8 | 0; //80% TODO make this custoumizeable\nconst NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\n\nconst MNIST_IMAGES_SPRITE_PATH =\n    'assets/mnist/mnist_images.png';\nconst MNIST_LABELS_PATH =\n    'assets/mnist/mnist_labels_uint8';\n\n/**\n * A class that fetches the sprited MNIST dataset and returns shuffled batches.\n *\n * NOTE: This will get much easier. For now, we do data fetching and\n * manipulation manually.\n */\nexport class MnistData {\n  constructor() {\n    this.shuffledTrainIndex = 0;\n    this.shuffledTestIndex = 0;\n  }\n\n  async load() {\n    // Make a request for the MNIST sprited image.\n    const img = new Image();\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const imgRequest = new Promise((resolve, reject) => {\n      img.crossOrigin = '';\n      img.onload = () => {\n        img.width = img.naturalWidth;\n        img.height = img.naturalHeight;\n\n        const datasetBytesBuffer =\n            new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\n\n        const chunkSize = 5000;\n        canvas.width = img.width;\n        canvas.height = chunkSize;\n\n        for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\n          const datasetBytesView = new Float32Array(\n              datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\n              IMAGE_SIZE * chunkSize);\n          ctx.drawImage(\n              img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\n              chunkSize);\n\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n          for (let j = 0; j < imageData.data.length / 4; j++) {\n            // All channels hold an equal value since the image is grayscale, so\n            // just read the red channel.\n            datasetBytesView[j] = imageData.data[j * 4] / 255;\n          }\n        }\n        this.datasetImages = new Float32Array(datasetBytesBuffer);\n\n        resolve();\n      };\n      img.src = MNIST_IMAGES_SPRITE_PATH;\n    });\n\n    const labelsRequest = fetch(MNIST_LABELS_PATH);\n    const [imgResponse, labelsResponse] =\n        await Promise.all([imgRequest, labelsRequest]);\n\n    this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\n    // Create shuffled indices into the train/test set for when we select a\n    // random dataset element for training / validation.\n    this.trainIndices = tf.util.createShuffledIndices(NUM_TRAIN_ELEMENTS);\n    this.testIndices = tf.util.createShuffledIndices(NUM_TEST_ELEMENTS);\n\n    // Slice the the images and labels into train and test sets.\n    this.trainImages =\n        this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.trainLabels =\n        this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n    this.testLabels =\n        this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n  }\n\n  nextTrainBatch(batchSize) {\n    return this.nextBatch(\n        batchSize, [this.trainImages, this.trainLabels], () => {\n          this.shuffledTrainIndex =\n              (this.shuffledTrainIndex + 1) % this.trainIndices.length;\n          return this.trainIndices[this.shuffledTrainIndex];\n        });\n  }\n\n  nextTestBatch(batchSize) {\n    return this.nextBatch(batchSize, [this.testImages, this.testLabels], () => {\n      this.shuffledTestIndex =\n          (this.shuffledTestIndex + 1) % this.testIndices.length;\n      return this.testIndices[this.shuffledTestIndex];\n    });\n  }\n\n  nextBatch(batchSize, data, index) {\n    const batchImagesArray = new Float32Array(batchSize * IMAGE_SIZE);\n    const batchLabelsArray = new Uint8Array(batchSize * NUM_CLASSES);\n\n    for (let i = 0; i < batchSize; i++) {\n      const idx = index();\n\n      const image =\n          data[0].slice(idx * IMAGE_SIZE, idx * IMAGE_SIZE + IMAGE_SIZE);\n      batchImagesArray.set(image, i * IMAGE_SIZE);\n\n      const label =\n          data[1].slice(idx * NUM_CLASSES, idx * NUM_CLASSES + NUM_CLASSES);\n      batchLabelsArray.set(label, i * NUM_CLASSES);\n    }\n\n    const xs = tf.tensor2d(batchImagesArray, [batchSize, IMAGE_SIZE]);\n    const labels = tf.tensor2d(batchLabelsArray, [batchSize, NUM_CLASSES]);\n\n    return {xs, labels};\n  }\n}\n","/* eslint-disable no-await-in-loop */\n/* jshint esversion: 8 */\n/* globals tf */\n\nimport TrainingVisualization from './TrainingVisualization.js';\n\nexport default class NeuralNetwork {\n  constructor(vp, els) {\n    this.els = els;\n    this.vp = vp;\n    this.setup();\n    this.visualization = new TrainingVisualization(this, els);\n  }\n\n  setup(modelid = 'dense', optimizerid = 'adam', learningRate = 0.001, activation = 'relu') {\n    // eslint-disable-next-line no-console\n    console.log(`Setting up NN model=${modelid} optimizer=${optimizerid} learningrate=${learningRate} activation=${activation}`);\n    this.modelid = modelid;\n    this.training = false;\n    this.trainedimages = 0;\n    this.lastrainedimages = 0;\n    this.pausecbs = [];\n\n    // this.els.trainingAccuracy.innerHTML = ``;\n    this.els.trainingProgress.innerHTML = this.trainedimages;\n\n    // delete old model if it has been existing\n    if (this.model) {\n      this.model.dispose();\n    }\n\n    // create model\n    this.model = tf.sequential();\n    const { model } = this;\n\n    const IMAGE_WIDTH = 28;\n    const IMAGE_HEIGHT = 28;\n    const IMAGE_CHANNELS = 1;\n\n    if (modelid === 'cnn') {\n      // CNN\n      // In the first layer of our convolutional neural network we have\n      // to specify the input shape. Then we specify some parameters for\n      // the convolution operation that takes place in this layer.\n      model.add(tf.layers.conv2d({\n        inputShape: [IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS],\n        kernelSize: 5,\n        filters: 8,\n        strides: 1,\n        activation,\n        kernelInitializer: 'varianceScaling',\n      }));\n\n      // The MaxPooling layer acts as a sort of downsampling using max values\n      // in a region instead of averaging.\n      model.add(tf.layers.maxPooling2d({\n        poolSize: [2, 2],\n        strides: [2, 2],\n      }));\n\n      // Repeat another conv2d + maxPooling stack.\n      // Note that we have more filters in the convolution.\n      model.add(tf.layers.conv2d({\n        kernelSize: 5,\n        filters: 16,\n        strides: 1,\n        activation,\n        kernelInitializer: 'varianceScaling',\n      }));\n      model.add(tf.layers.maxPooling2d({\n        poolSize: [2, 2],\n        strides: [2, 2],\n      }));\n\n      // Now we flatten the output from the 2D filters into a 1D vector to prepare\n      // it for input into our last layer. This is common practice when feeding\n      // higher dimensional data to a final classification output layer.\n      model.add(tf.layers.flatten());\n    } else if (modelid === 'dense') {\n      model.add(\n        tf.layers.flatten({\n          inputShape: [IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS],\n        })\n      );\n\n      model.add(tf.layers.dense({\n        units: 100,\n        activation,\n        kernelInitializer: 'varianceScaling',\n      }));\n    } else if (modelid === 'nohidden') {\n      model.add(\n        tf.layers.flatten({\n          inputShape: [IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS],\n        })\n      );\n    }\n\n    // Our last layer is a dense layer which has 10 output units, one for each\n    // output class (i.e. 0, 1, 2, 3, 4, 5, 6, 7, 8, 9).\n    const NUM_OUTPUT_CLASSES = 10;\n    model.add(tf.layers.dense({\n      units: NUM_OUTPUT_CLASSES,\n      kernelInitializer: 'varianceScaling',\n      activation: 'softmax',\n    }));\n\n    // Choose an optimizer, loss function and accuracy metric,\n    // then compile and return the model\n    const optimizer = (optimizerid === 'adam') ? tf.train.adam(learningRate) : tf.train.sgd(learningRate);\n    // tf.train.adam(learningRate);\n\n    model.compile({\n      optimizer,\n      loss: 'categoricalCrossentropy',\n      // optimizer: 'sgd',\n      // loss: 'meanSquaredError',\n      metrics: ['accuracy'],\n    });\n\n    return model;\n  }\n\n  async trainByBatchFromData(data, TRAIN_DATA_SIZE, BATCH_SIZE) {\n    if (TRAIN_DATA_SIZE === 1 || BATCH_SIZE === 1) {\n      tf.setBackend('cpu');\n      // fitting with single training-data results in NaNs when WebGL-backend is used\n      // for unknown reasons. Unfortunately, mixing cpu ang webgl backend changes the\n      // training in some way: Way more input images are required to obtain same accuracy\n    }\n    const { model } = this;\n    const [trainXs, trainYs] = tf.tidy(() => {\n      const d = data.nextTrainBatch(TRAIN_DATA_SIZE);\n      return [\n        d.xs.reshape([TRAIN_DATA_SIZE, 28, 28, 1]),\n        d.labels,\n      ];\n    });\n\n    await this.visualization.setCurrentTraining(trainXs, trainYs);\n\n    await model.fit(trainXs, trainYs, {\n      batchSize: BATCH_SIZE,\n      callbacks: {\n        onEpochEnd: async () => {},\n        onBatchEnd: async () => {\n          this.trainedimages += BATCH_SIZE;\n          // this.els.trainingAccuracy.innerHTML =\n          //  `Accuracy on current training data: ${(logs.acc * 1000 | 0)/10}%`;\n          this.els.trainingProgress.innerHTML = this.trainedimages;\n        },\n      },\n    });\n    tf.dispose(trainXs);\n    tf.dispose(trainYs);\n\n    if (TRAIN_DATA_SIZE === 1 || BATCH_SIZE === 1) {\n      tf.setBackend('webgl');\n      // fitting with single training-data results in NaNs when WebGL-backend\n      // is used for unknown reasons\n    }\n  }\n\n  async trainSingleStep(data) {\n    await this.trainByBatchFromData(data, 1, 1);\n    this.vp.updateValidationImages(this.model);\n    this.vp.updateAccuracy(this.model);\n  }\n\n  async train(data) {\n    this.training = true;\n\n    while (this.training) {\n      // start slower in beginning, increase step size with time\n      // const BATCH_SIZE = 1 << (Math.max(4, Math.min(8, this.trainedimages / 20 | 0)));\n      // a sequence of increasing powers of two\n\n      // a constant BATCH_SIZE and TRAIN_DATA_SIZE increases the speed of convergence :/.\n      const BATCH_SIZE = 32;\n      const TRAIN_DATA_SIZE = 32; // *Math.min(8, Math.max(1, this.trainedimages / 40 | 0));\n\n      await this.trainByBatchFromData(data, BATCH_SIZE, TRAIN_DATA_SIZE);\n\n      if (this.trainedimages\n        > this.lastrainedimages + Math.min(1000, 0.3 * this.trainedimages)\n        || this.trainedimages < 250) {\n        this.vp.updateValidationImages(this.model);\n        this.vp.updateAccuracy(this.model);\n        if ((this.trainedimages < 100)) {\n          // sleep some time per image\n          await new Promise(resolve => setTimeout(\n            resolve,\n            (1000 / (5 + 4 * this.trainedimages)) * (this.trainedimages - this.lastrainedimages)\n          ));\n        }\n        this.lastrainedimages = this.trainedimages;\n      }\n    }\n\n    while (this.pausecbs.length > 0) {\n      (this.pausecbs.pop())();\n    }\n  }\n\n  addPauseCallback(cb) {\n    this.pausecbs.push(cb);\n  }\n\n  pauseTraining() {\n    return new Promise((resolve) => {\n      if (this.training) {\n        this.addPauseCallback(resolve);\n        this.training = false;\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  async toggleTraining(data) {\n    if (this.training) {\n      await this.pauseTraining();\n    } else {\n      await this.train(data);\n    }\n  }\n\n  cleanup() {\n    this.model.dispose();\n    this.trainedimages = 0;\n    this.lastrainedimages = 0;\n  }\n}\n","/* globals tf */\n/* eslint-disable no-bitwise */\nimport BarChart from './BarChart.js';\n\nlet SCALE_FACTOR = 9;\nlet LINEWIDTH = 2 * SCALE_FACTOR;\n\nexport default class Paint {\n  constructor(el, model, outputThreshold, nwvis = false, clearTimeoutTime = 2.2) {\n    this.clearTimeoutTime = clearTimeoutTime;\n    this.drawingChanged = true;\n    this.model = model;\n    this.nwvis = nwvis;\n\n    this.outputThreshold = outputThreshold;\n\n    // last known position\n    this.pos = {\n      x: 0,\n      y: 0,\n    };\n\n    this.createUI(el);\n    this.empty = true;\n    this.isdown = false;\n    this.pointerId = -1;\n  }\n\n  addEventListeners() {\n    this.eventfunctions = {\n      pointerdown: ((e) => {\n        if (!this.isdown) {\n          this.removeClearTimeout();\n          this.setPosition(e);\n          this.isdown = true;\n          this.pointerId = e.pointerId;\n        }\n      }),\n      pointermove: ((e) => {\n        if (this.isdown && (this.pointerId === e.pointerId)) this.draw(e);\n      }),\n      pointerup: ((e) => {\n        if ((this.pointerId === e.pointerId)) {\n          this.setClearTimeout();\n          this.isdown = false;\n        }\n      }),\n      pointerleave: ((e) => {\n        if ((this.pointerId === e.pointerId)) {\n          this.setClearTimeout();\n          this.isdown = false;\n        }\n      }),\n      pointercancel: ((e) => {\n        if ((this.pointerId === e.pointerId)) {\n          this.setClearTimeout();\n          this.isdown = false;\n        }\n      }),\n    };\n\n    for (const eventname in this.eventfunctions) {\n      this.drawcanvas.addEventListener(eventname, this.eventfunctions[eventname], {\n        passive: true,\n      });\n    }\n  }\n\n  removeEventListeners() {\n    for (const eventname in this.eventfunctions) {\n      this.drawcanvas.removeEventListener(eventname, this.eventfunctions[eventname]);\n    }\n  }\n\n  createUI(el) {\n    this.drawcanvas = el.querySelector('.drawcanvas');\n    this.normalizecanvas = el.querySelector('.normalizecanvas') || document.createElement('canvas');\n    this.outputbars = el.querySelector('.bars');\n    this.outputdigit = el.querySelector('.digit');\n    this.inputbox = el.querySelector('.input.box');\n\n    this.addEventListeners();\n\n    const { normalizecanvas, drawcanvas } = this;\n\n    normalizecanvas.width = 28;\n    normalizecanvas.height = 28;\n\n    const updateDimensions = () => {\n      SCALE_FACTOR = Math.floor(this.drawcanvas.clientWidth / 28) - 1;\n      LINEWIDTH = 2 * SCALE_FACTOR;\n      drawcanvas.width = this.drawcanvas.clientWidth;\n      drawcanvas.height = this.drawcanvas.clientWidth;\n    };\n    updateDimensions();\n    window.onresize = () => {\n      updateDimensions();\n    };\n\n    this.drawcontext = this.drawcanvas.getContext('2d');\n    this.normalizecontext = this.normalizecanvas.getContext('2d');\n    // const { drawcontext, normalizecontext } = this;\n    //  normalizecanvas.style.width = 28 * SCALE_FACTOR + 'px';\n    //  normalizecanvas.style.height = 28 * SCALE_FACTOR + 'px';\n    //  normalizecanvas.style.imageRendering = 'pixelated';\n    /*\n        const resetbutton = document.createElement(\"button\");\n        this.resetbutton = resetbutton;\n        this.resetbutton.style.visibility = 'hidden';\n\n        resetbutton.innerHTML = \"reset\";\n        resetbutton.addEventListener('click', () => {\n          this.drawcontext.fillRect(0, 0, this.drawcanvas.width, this.drawcanvas.height);\n          this.normalize(100);\n          this.predict();\n          this.resetbutton.style.visibility = 'hidden';\n        });\n\n        this.drawcanvas.parentNode.insertBefore(resetbutton, this.drawcanvas);\n        this.resetbutton.style.position = \"absolute\";\n        this.resetbutton.style.zIndex = 10;\n    */\n    if (this.outputbars) {\n      this.barchart = new BarChart(this.outputbars);\n    }\n\n    this.clear();\n  }\n\n\n  setPosition(e) {\n    const rect = this.drawcanvas.getBoundingClientRect();\n    this.pos.x = (e.clientX - rect.left);\n    this.pos.y = (e.clientY - rect.top);\n    return true;\n  }\n\n  removeClearTimeout() {\n    if (this.clearTimeout) {\n      clearTimeout(this.clearTimeout);\n    }\n    return true;\n  }\n\n  setClearTimeout() {\n    this.removeClearTimeout(); // remove previous clearTimeouts\n    // clean up everything after specified time\n    this.clearTimeout = setTimeout(() => {\n      this.clear();\n    }, this.clearTimeoutTime * 1000);\n    return true;\n  }\n\n  draw(e) {\n    this.removeClearTimeout();\n    const ox = this.pos.x;\n    const oy = this.pos.y;\n    this.setPosition(e);\n    const nx = this.pos.x;\n    const ny = this.pos.y;\n    if (Math.abs(nx - ox) + Math.abs(ny - oy) < 3) {\n      this.pos.x = ox;\n      this.pos.y = oy;\n      return;\n    }\n    this.inputbox.classList.remove('background');\n    this.empty = false;\n    this.drawcontext.beginPath(); // begin\n    this.drawcontext.lineWidth = LINEWIDTH;\n    this.drawcontext.lineCap = 'round';\n    this.drawcontext.strokeStyle = 'white';\n\n    this.drawcontext.moveTo(ox, oy); // from\n    this.setPosition(e);\n    this.drawcontext.lineTo(nx, ny); // to\n\n    this.drawcontext.stroke(); // draw it!\n\n    this.normalizecontext.fillStyle = 'black';\n    this.normalizecontext.fillRect(0, 0, this.normalizecanvas.width, this.normalizecanvas.height);\n\n    this.drawingChanged = true;\n    this.normalize(LINEWIDTH);\n    this.predict();\n    // this.resetbutton.style.visibility = 'visible';\n  }\n\n  // normalize image\n  normalize(SKIPFACTOR) {\n    let centerx = 0;\n    let centery = 0;\n    let top = 1000;\n    let bottom = -1000;\n    let left = 1000;\n    let right = -1000;\n    const imgData = this.drawcontext.getImageData(\n      0, 0, this.drawcanvas.width, this.drawcanvas.height\n    );\n    const { data } = imgData;\n    let totalweight = 0;\n    for (let i = 0; i < data.length; i += 4 * SKIPFACTOR) {\n      const x = (i / 4) % this.drawcanvas.width;\n      const y = ((i / 4) / (this.drawcanvas.width)) | 0;\n      totalweight += data[i];\n      centerx += (data[i]) * x;\n      centery += (data[i]) * y;\n\n      if (data[i] > 0) {\n        top = Math.min(top, y);\n        bottom = Math.max(bottom, y);\n        left = Math.min(left, x);\n        right = Math.max(right, x);\n      }\n    }\n    if (totalweight > 0) {\n      centerx /= totalweight;\n      centery /= totalweight;\n\n      const boxsize = Math.max(right - left, bottom - top);\n\n      // according to MNIST normalization:\n      /*\n      The original black and white (bilevel) images from NIST were size normalized\n      to fit in a 20x20 pixel box while preserving their aspect ratio. The\n      resulting images contain grey levels as a result of the anti-aliasing\n      technique used by the normalization algorithm. the images were centered\n      in a 28x28 image by computing the center of mass of the pixels, and\n      translating the image so as to position this point at the center of the 28x28 field.\n      */\n      this.normalizecontext.drawImage(\n        this.drawcanvas,\n        left, top,\n        boxsize, boxsize,\n        14 + (20 / boxsize) * (left - centerx),\n        14 + (20 / boxsize) * (top - centery),\n        20, 20\n      );\n    } else {\n      this.normalizecontext.fillRect(0, 0, this.normalizecanvas.width, this.normalizecanvas.height);\n    }\n\n    return true;\n  }\n\n  predict() {\n    if (this.model && this.normalizecanvas && this.drawingChanged) { // && newFrame rendered TODO?\n      const [probabilities, predicted] = tf.tidy(() => {\n        const imageTensor = tf.browser\n          .fromPixels(this.normalizecanvas, 1)\n          .toFloat()\n          .mul(tf.scalar(1 / 255))\n          .clipByValue(0, 1)\n          .reshape([1, 28, 28, 1]);\n        if (this.nwvis) {\n          this.nwvis.show(imageTensor,\n            this.normalizecontext.getImageData(\n              0, 0,\n              this.normalizecanvas.width, this.normalizecanvas.height\n            ).data.filter((d, k) => (k % 4 === 0)));\n        }\n        const result = this.model.predict(imageTensor);\n        return [\n          result.dataSync(),\n          result.argMax([-1]).dataSync(),\n        ];\n      });\n\n      if (this.barchart) {\n        this.barchart.update(probabilities, predicted);\n      }\n\n      if (this.outputdigit) {\n        this.outputdigit.innerHTML = (!this.empty && probabilities[predicted] > this.outputThreshold) ? predicted : '?';\n        this.outputdigit.parentElement.classList.toggle('solved', probabilities[predicted] > this.outputThreshold);\n      }\n    }\n    return true;\n  }\n\n  clear() {\n    this.drawcontext.fillRect(0, 0, this.drawcanvas.width, this.drawcanvas.height);\n    this.empty = true;\n    this.normalize(100);\n    this.predict();\n    this.inputbox.classList.add('background');\n  }\n\n  cleanup() {\n    this.clear();\n    this.removeEventListeners();\n\n    // this.predict();\n    // this.resetbutton.style.visibility = 'hidden';\n\n    if (this.barchart) {\n      this.barchart.cleanup();\n    }\n  }\n}\n","/* eslint-disable no-bitwise,class-methods-use-this,no-param-reassign */\nimport Slide from './slide.js';\n\nexport default class SlideShow {\n  constructor(controller) {\n    this.createEventMask();\n    this.controller = controller;\n    this.slides = Array.from(document.querySelectorAll('[data-slide]'))\n      .map(element => element.getAttribute('data-slide'));\n    this.currentSlide = 0;\n    this.currentSlideController = null;\n\n    window.onhashchange = async () => {\n      this.maskEvents();\n      await this.doSlideChange();\n      this.unmaskEvents();\n    };\n    this.doSlideChange();\n\n    window.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'ArrowLeft':\n          this.goPrevious();\n          break;\n        case 'ArrowRight':\n          this.goNext();\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  createEventMask() {\n    this.eventMask = document.createElement('div');\n    this.eventMask.style.position = 'absolute';\n    this.eventMask.style.top = '0';\n    this.eventMask.style.left = '0';\n    this.eventMask.style.width = '100%';\n    this.eventMask.style.height = '100%';\n    this.eventMask.style.zIndex = '1000000';\n    this.eventMask.style.pointerEvents = 'all';\n    this.eventMask.style.backgroundColor = 'transparent';\n    this.eventMask.style.display = 'none';\n    window.document.body.appendChild(this.eventMask);\n  }\n\n  maskEvents() {\n    this.eventMask.style.display = 'block';\n  }\n\n  unmaskEvents() {\n    this.eventMask.style.display = 'none';\n  }\n\n  /**\n   * Go to the first slide\n   */\n  goFirst() {\n    if (this.slides.length > 0) {\n      this.goTo(this.slides[0]);\n    }\n  }\n\n  /**\n   * Go the net slide\n   */\n  goNext() {\n    const currentID = this.slides.indexOf(this.getCurrentSlide());\n    if (currentID < this.slides.length - 1) {\n      this.goTo(this.slides[currentID + 1]);\n    }\n  }\n\n  /**\n   * Go to the previous slide\n   */\n  goPrevious() {\n    const currentID = this.slides.indexOf(this.getCurrentSlide());\n    if (currentID > 0) {\n      this.goTo(this.slides[currentID - 1]);\n    }\n  }\n\n  /**\n   * Go to the requested slide\n   * @param {string} id\n   */\n  goTo(id) {\n    if (this.slides.includes(id)) {\n      window.location.hash = id;\n    }\n  }\n\n  /**\n   * Returns the ID of the current slide\n   * @return {null|string}\n   */\n  getCurrentSlide() {\n    const hash = window.location.hash.substring(1);\n    if (this.slides.length === 0) {\n      return null;\n    }\n\n    return (hash !== '' ? hash : this.slides[0]);\n  }\n\n  /**\n   * Handles a slide change by modifying the view and navigation\n   *\n   * @private\n   */\n  async doSlideChange() {\n    const currentSlide = this.getCurrentSlide();\n\n    document.querySelector('.footer .navigation').childNodes.forEach((btn) => {\n      btn.classList.remove('selected');\n    });\n\n    this.slides.forEach((slide) => {\n      const element = document.querySelector(`[data-slide=${slide}]`);\n      if (element.onExit && element.open) {\n        element.onExit(this.controller);\n      }\n      element.open = false;\n      element.classList.remove('visible');\n      element.classList.remove('entering');\n    });\n\n    if (this.currentSlideController) {\n      await this.currentSlideController.onExit();\n      this.currentSlideController = null;\n    }\n\n    const element = document.querySelector(`[data-slide=${currentSlide}]`);\n    if (element) {\n      const nav = element.getAttribute('data-slide-nav') || currentSlide;\n      const menuItem = document.querySelector(`.footer .navigation [href='#${nav}']`);\n      if (menuItem) {\n        menuItem.classList.add('selected');\n      }\n\n      element.open = true;\n      element.classList.add('visible');\n      setTimeout(() => {\n        element.classList.add('entering');\n      }, 0);\n      if (element.onEnter) {\n        element.onEnter(this.controller);\n      }\n\n      const SlideClass = Slide.getClass(currentSlide);\n      if (SlideClass) {\n        this.currentSlideController = new SlideClass(element, this.controller);\n        await this.currentSlideController.onEnter();\n      }\n    }\n  }\n}\n","/* globals tf */\n/* eslint-disable class-methods-use-this,no-param-reassign,no-bitwise */\nimport BarChart from './BarChart.js';\n\nconst HEIGHT = 500;\nconst DENSEWIDTH = 380;\nconst XOFFSET = 20;\n\nexport default class TrainingVisualization {\n  constructor(nn, els) {\n    this.els = els;\n    this.nn = nn;\n    this.currentDigit = new Float32Array(784);\n    this.currentProbabilities = new Float32Array(10);\n\n    this.canvas = this.els.network;\n    const { canvas } = this;\n    canvas.height = canvas.clientHeight;\n    canvas.width = canvas.clientWidth;\n    this.ctx = canvas.getContext('2d');\n\n    this.acanvas = this.els.activations;\n    const { acanvas } = this;\n    acanvas.height = acanvas.clientHeight;\n    acanvas.width = acanvas.clientWidth;\n\n    this.actx = acanvas.getContext('2d');\n\n    this.icanvas = this.els.input;\n    const { icanvas } = this;\n    icanvas.height = icanvas.clientHeight;\n    icanvas.width = icanvas.clientWidth;\n    this.ictx = icanvas.getContext('2d');\n\n    this.barchart = new BarChart(this.els.bars);\n\n    // this.lastvisualization = -1;\n    this.traindigit = document.createElement('canvas');\n    this.traindigit.height = 28;\n    this.traindigit.width = 28;\n\n    this.lt1 = 0.08;\n    this.lt2 = 0.2;\n    // this.animateNetwork();\n\n    this.renderNetwork();\n    this.renderActivations();\n  }\n\n  findthreshold(arr, a, b, target) { // binary search to find good\n    const m = (a + b) / 2;\n    const ccnt = arr.filter(x => x * x > m * m).length;\n    if (b - a < 0.001 || Math.abs(ccnt - target) < target * 0.2) { // correct up to 20%\n      return m;\n    }\n\n    if (ccnt < target) {\n      // to few elements for threshold=m -> threshold should be smaller than m\n      return this.findthreshold(arr, a, m, target);\n    }\n\n    return this.findthreshold(arr, m, b, target);\n  }\n\n\n  drawdenselayer(N, M, weights, x0, y0, width, height, lastthreshold) {\n    const { ctx } = this;\n\n    /*\n    // takes about 120ms for 78400 weights\n    const topWeights = Array.from(weights)\n    .map((v, k) => [Math.abs(v), k]).sort((a, b) => (a[0] - b[0]))\n    .slice(Math.max(0, weights.length - 100));\n    const maxWeight = topWeights[topWeights.length - 1][0];\n    for (let k in topWeights) {\n      const nodeB = topWeights[k][1] % M;\n      const nodeA = topWeights[k][1] / M;\n      const val = topWeights[k][0];\n      ctx.beginPath();\n      ctx.globalAlpha = val / topWeights[0][0];\n      ctx.moveTo(x0, y0 + nodeA * height / N);\n      ctx.lineTo(x0 + width, y0 + nodeB * height / M);\n      ctx.stroke();\n    }\n    */\n\n    // takes about 40ms for 784 weights\n    const threshold = this.findthreshold(weights, lastthreshold * 0.8, lastthreshold * 1.2, 200);\n    for (let nodeA = 0; nodeA < N; nodeA += 1) {\n      for (let nodeB = 0; nodeB < M; nodeB += 1) {\n        const val = weights[nodeA * M + nodeB];\n        if (val * val > threshold * threshold) {\n          ctx.beginPath();\n          ctx.globalAlpha = Math.abs(val) * (0.3 / threshold);\n          ctx.strokeStyle = val > 0 ? 'blue' : 'red';\n          ctx.moveTo(x0, y0 + nodeA * height / (N - 1));\n\n          // ctx.lineTo(x0 + width, y0 + nodeB * height / (M - 1));\n          ctx.bezierCurveTo(\n            x0 + width / 2, y0 + nodeA * height / (N - 1),\n            x0 + width / 2, y0 + nodeB * height / (M - 1),\n            x0 + width, y0 + nodeB * height / (M - 1)\n          );\n          ctx.stroke();\n        }\n      }\n    }\n    ctx.globalAlpha = 1;\n    return threshold;\n  }\n\n  drawnodes(ctx, N, values, x0, y0, height, radius) {\n    values = values || new Array(N).fill(0);\n    for (let nodeA = 0; nodeA < N; nodeA += 1) {\n      let cval = Math.max(128, 255 - (values[nodeA] * 128 | 0));\n      if (radius <= 2) {\n        cval = (cval + 128) / 2 | 0;\n      }\n      ctx.fillStyle = `rgb(${cval}, ${cval}, ${cval})`;\n      ctx.beginPath();\n      ctx.arc(x0, y0 + nodeA * height / (N - 1), radius, 0, 2 * Math.PI, false);\n      /*\n        if (cval > 200 && radius > 2) {\n          ctx.strokeStyle = `rgb(128, 128, 128)`;\n          ctx.lineWidth = 1;\n          ctx.stroke();\n        }\n      */\n      // ctx.stroke();\n      ctx.fill();\n    }\n  }\n\n  renderNetwork() {\n    if (this.nn.modelid === 'dense') {\n      const { canvas, ctx } = this;\n      const weights = this.nn.model.getWeights().map(w => w.dataSync());\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      this.lt1 = this.drawdenselayer(\n        784, 100, weights[0], XOFFSET, 50, DENSEWIDTH, (HEIGHT - 100), this.lt1\n      );\n      this.lt2 = this.drawdenselayer(\n        100, 10, weights[2], XOFFSET + DENSEWIDTH, 50, DENSEWIDTH, (HEIGHT - 100), this.lt2\n      );\n    }\n\n    // this.lastvisualization = this.nn.trainedimages;\n  }\n\n  renderActivations() {\n    this.actx.clearRect(0, 0, this.acanvas.width, this.acanvas.height);\n    this.ictx.clearRect(0, 0, this.icanvas.width, this.icanvas.height);\n\n    if (this.traindigit.active) {\n      this.ictx.imageSmoothingEnabled = false; // no antialiasin\n      this.ictx.filter = 'brightness(0.5) invert(1) brightness(0.95)';\n      this.ictx.drawImage(this.traindigit, 0, 0, 28, 28, 60, 60, 28 * 6, 28 * 6);\n      this.ictx.filter = 'none';\n    }\n\n    // draw bars for activations\n    /*\n      this.octx.beginPath();\n      this.octx.strokeStyle = '#c4c4c4';\n      this.octx.lineWidth = 20;\n      this.octx.lineCap = \"round\";\n      for (let k = 0; k < 10; k++) {\n        const x0 = 10;\n        const x1 = 95;\n        const y0 = 50 + (HEIGHT - 100) * k / (10 - 1);\n        this.octx.moveTo(x0, y0);\n        this.octx.lineTo(\n          this.currentProbabilities[k] * x1 + (1 - this.currentProbabilities[k]) * x0,\n          y0\n        );\n      }\n      this.octx.stroke();\n      this.octx.lineWidth = 1;\n      this.octx.lineCap = \"butt\";\n    */\n    this.barchart.update(this.currentProbabilities, this.currentTarget);\n\n\n    this.drawnodes(this.actx, 784, this.currentDigit, XOFFSET, 50, (HEIGHT - 100), 0.5);\n    if (this.nn.modelid === 'dense') {\n      this.drawnodes(this.actx, 100, this.intermediateActivations,\n        XOFFSET + DENSEWIDTH, 50, (HEIGHT - 100), 1.5);\n    }\n    // this.drawnodes(this.octx, 10, this.currentProbabilities, 8, 50, (HEIGHT - 100), 8);\n\n    /*\n        //draw digits\n        this.octx.fillStyle = 'black';\n        for (let k = 0; k < 10; k++) {\n          const x0 = 105;\n          const y0 = 50 + (HEIGHT - 100) * k / (10 - 1);\n          this.octx.font = \"20px 'Exo 2'\";\n          this.octx.fillText(k, x0, y0 + 8);\n        }\n    */\n  }\n\n  /*\n    animateNetwork() {\n      if (this.nn.trainedimages\n        > this.lastvisualization + Math.min(512, 0.1 * this.nn.trainedimages)) {\n        this.renderNetwork();\n      }\n      requestAnimationFrame(() => this.animateNetwork());\n    }\n  */\n  async setCurrentTraining(trainXs, trainYs) {\n    const trainX1 = trainXs.slice([0, 0, 0, 0], [1, 28, 28, 1]); // only the first\n    const imageTensor = trainX1.reshape([28, 28, 1]); // first as image\n    await tf.browser.toPixels(imageTensor, this.traindigit);\n    this.traindigit.active = true;\n    this.currentDigit = imageTensor.dataSync();\n    this.computeActivations(trainX1);\n    const trainY1 = trainYs.slice([0, 0], [1, 10]); // only the first\n    // const target = trainY1.reshape([10]);\n    [this.currentTarget] = trainY1.argMax([-1]).dataSync();\n    this.renderNetwork();\n    this.renderActivations();\n    // clean up tensors\n    trainX1.dispose();\n    trainY1.dispose();\n    imageTensor.dispose();\n    // target.dispose();\n  }\n\n  async show(imageTensor, pixels) {\n    this.computeActivations(imageTensor);\n    this.currentDigit = pixels;\n    this.traindigit.active = false;\n    this.renderActivations();\n  }\n\n  computeActivations(input) {\n    if (this.nn.modelid === 'dense') {\n      const A1 = this.nn.model.layers[0].apply(input);\n      const A2 = this.nn.model.layers[1].apply(A1);\n      const A3 = this.nn.model.layers[2].apply(A2);\n      this.intermediateActivations = A2.dataSync().map(x => Math.abs(x) / 2);\n      this.currentProbabilities = A3.dataSync();\n      [this.currentTarget] = A3.argMax([-1]).dataSync();\n      A1.dispose();\n      A2.dispose();\n      A3.dispose();\n    } else {\n      const prediction = this.nn.model.predict(input);\n      this.currentProbabilities = prediction.dataSync();\n      [this.currentTarget] = prediction.argMax([-1]).dataSync();\n      prediction.dispose();\n    }\n  }\n}\n","/* eslint-disable no-await-in-loop */\n/* globals tf */\nconst NUM_EXAMPLES = 50; // TODO\n\nexport default class ValidationPreview {\n  constructor(data, els) {\n    this.data = data;\n    this.els = els;\n\n    this.displayedAccuracy = 0;\n    this.accuracy = this.displayedAccuracy;\n    this.isanimating = true;\n    this.acccbs = [];\n    // this.animate();\n  }\n\n  async initValidationImages() {\n    if (this.els.validationImages) {\n      this.digittext = [];\n      this.digitcontainer = [];\n      // Get the examples\n      this.examples = this.data.nextTestBatch(NUM_EXAMPLES);\n      const { examples } = this;\n      this.examplelabels = await examples.labels.argMax([-1]).dataSync();\n\n      const container = document.createElement('div');\n      for (let i = 0; i < NUM_EXAMPLES; i += 1) {\n        // Reshape the image to 28x28 px\n        const imageTensor = tf.tidy(() => examples.xs\n          .slice([i, 0], [1, examples.xs.shape[1]])\n          .reshape([28, 28, 1]));\n\n        const canvas = document.createElement('canvas');\n        this.digitcontainer[i] = document.createElement('div');\n\n        await tf.browser.toPixels(imageTensor, canvas);\n        this.digitcontainer[i].appendChild(canvas);\n        this.digittext[i] = document.createElement('div');\n        this.digitcontainer[i].appendChild(this.digittext[i]);\n        container.appendChild(this.digitcontainer[i]);\n        imageTensor.dispose();\n      }\n      //\n      this.els.validationImages.appendChild(container);\n      // document.body.appendChild(container);\n    }\n  }\n\n  async updateValidationImages(model) {\n    if (this.els.validationImages) {\n      const values = tf.tidy(() => {\n        const testxs = this.examples.xs.reshape([NUM_EXAMPLES, 28, 28, 1]);\n        return model.predict(testxs).argMax([-1]).dataSync();\n      });\n      //  console.log(preds);\n\n      for (let i = 0; i < NUM_EXAMPLES; i += 1) {\n        // digittext[i].innerHTML = `${values[i]} (${examplelabels[i]})`;\n        this.digittext[i].innerHTML = `${values[i]}`;\n        this.digitcontainer[i].style.backgroundColor = (values[i] === this.examplelabels[i]) ? 'green' : 'red';\n      }\n    }\n  }\n\n  async updateAccuracy(model, TEST_DATA_SIZE = 100) {\n    this.accuracy = tf.tidy(() => {\n      const d = this.data.nextTestBatch(TEST_DATA_SIZE);\n      const testXs = d.xs.reshape([TEST_DATA_SIZE, 28, 28, 1]);\n      const testYs = d.labels;\n      return model.evaluate(testXs, testYs)[1].dataSync();\n    });\n\n    if (TEST_DATA_SIZE < 1000 && this.accuracy > 0.9) {\n      // compute more exact accuracy if it is close to 100%\n      await this.updateAccuracy(model, 1000);\n    }\n    // this.els.validationAccuracy.innerHTML =\n    // `Accuracy on validation data (approx.): ${(acc * 1000 | 0)/10} %`;\n    this.els.validationAccuracy.innerHTML = `${(this.accuracy < 0.9)\n      ? Math.round(this.accuracy * 100)\n      : Math.round(this.accuracy * 1000) / 10}%`;\n\n    // run all callbacks for a lower accuracy\n    this.acccbs.filter(p => p.acc <= this.accuracy).map(p => (p.cb)());\n    // delete all callbacks that have been run\n    this.acccbs = this.acccbs.filter(p => p.acc > this.accuracy);\n  }\n\n  /* This function is not used anymore: smooth rendering of accuracy */\n  animate() {\n    if (!this.isanimating) {\n      return;\n    }\n    const alpha = 0.05;\n    this.displayedAccuracy = (1 - alpha) * this.displayedAccuracy + alpha * this.accuracy;\n    // this.els.validationAccuracy.style = `--angle: ${(1-this.displayedAccuracy)*360}deg;`;\n    // const accuracy = (this.displayedAccuracy < 0.95)\n    //  ? Math.round(this.displayedAccuracy * 100)\n    //  : Math.round(this.displayedAccuracy * 1000) /10;\n    // this.els.validationAccuracy.firstElementChild.innerHTML = `${accuracy}%`;\n    const accuracy = (this.displayedAccuracy < 0.95)\n      ? Math.round(this.displayedAccuracy * 100)\n      : Math.round(this.displayedAccuracy * 1000) / 10;\n    this.els.validationAccuracy.innerHTML = `${accuracy}%`;\n    window.requestAnimationFrame(() => this.animate());\n  }\n\n  cleanup() {\n    while (this.els.validationImages && this.els.validationImages.firstChild) {\n      this.els.validationImages.removeChild(this.els.validationImages.firstChild);\n    }\n    this.isanimating = false;\n  }\n\n  addAccuracyCallback(acc, cb) {\n    this.acccbs.push({\n      cb,\n      acc,\n    });\n  }\n}\n","/* eslint-disable no-param-reassign */\n/* globals IMAGINARY */\n\nexport default class I18nControler {\n  static init(defaultLanguage = 'en') {\n    return IMAGINARY.i18n.init({\n      queryStringVariable: 'lang',\n      translationsDirectory: 'tr',\n      defaultLanguage,\n    }).then(() => {\n      I18nControler.update();\n    });\n  }\n\n  static setLanguage(code) {\n    IMAGINARY.i18n.setLang(code).then(() => {\n      I18nControler.update();\n    });\n  }\n\n  static update() {\n    document.querySelectorAll('[data-i18n-str]')\n      .forEach((element) => {\n        element.innerHTML = IMAGINARY.i18n.t(element.getAttribute('data-i18n-str'));\n      });\n\n    document.querySelectorAll('[data-i18n-str-title]')\n      .forEach((element) => {\n        element.setAttribute(\n          'title',\n          IMAGINARY.i18n.t(element.getAttribute('data-i18n-str-title')));\n      });\n\n    document.querySelectorAll('[data-i18n-html]')\n      .forEach((element) => {\n        const path = `pages/${IMAGINARY.i18n.getLang()}/${element.getAttribute('data-i18n-html')}.html`;\n        fetch(path)\n          .then((response) => {\n            if (response.status >= 200 && response.status < 300) {\n              return response.text();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((content) => {\n            element.innerHTML = content;\n          })\n          .catch((err) => {\n            console.error(`Error fetching i18n page ${path}`);\n            console.error(err);\n          });\n      });\n  }\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n// import 'core-js/stable';\n// import 'regenerator-runtime/runtime';\n// import 'fetch-ie8';\nimport './main';\n","/* eslint-disable no-unused-vars */\nimport Controller from './Controller.js';\nimport IdleDetector from './IdleDetector.js';\nimport SlideShow from './SlideShow.js';\nimport I18nControler from './i18nController.js';\nimport LangSwitcher from './LangSwitcher.js';\n\nimport './slide-controllers/intro.js';\nimport './slide-controllers/training.js';\nimport './slide-controllers/what-is-training-data.js';\nimport './slide-controllers/design-network.js';\n\n/**\n * Return the URL of the user-supplied config file or {null} if it is not present.\n *\n * A custom config file name can be provided via the 'config' query string variable.\n * Allowed file names must match the regex /^[A-Za-z0\\-_.]+$/.\n *\n * @returns {URL|null} User-supplied config URL or {null} if not supplied.\n * @throws {Error} If the user-supplied config file name doesn't match the regex.\n */\nfunction getCustomConfigUrl() {\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  if (!urlSearchParams.has('config')) {\n    return null;\n  }\n\n  const customConfigName = urlSearchParams.get('config');\n  const whitelistRegex = /^[A-Za-z0\\-_.]+$/;\n  if (whitelistRegex.test(customConfigName)) {\n    return new URL(customConfigName, window.location.href);\n  }\n\n  throw new Error(`Custom config path ${customConfigName} must match ${whitelistRegex.toString()}.`);\n}\n\nconst configDefaults = {\n  paintClearTimeout: 2.2,\n  idleReload: 300,\n  lastTrainStepTimeout: 1.5,\n  languages: {\n    en: 'English',\n  },\n  defaultLanguage: 'en',\n  modelPath: 'assets/models/my-model.json',\n};\n\n\nconst defaultConfigUrl = new URL('./config.json', window.location.href);\nconst customConfigUrl = getCustomConfigUrl();\nconst configUrl = customConfigUrl || defaultConfigUrl;\n\nfetch(configUrl, { cache: 'no-store' })\n  .then((response) => {\n    if (response.status >= 200 && response.status < 300) {\n      return response.json();\n    }\n    throw new Error(response.statusText);\n  })\n  .catch((err) => { throw new Error(`Failed to load config file ${configUrl}: ${err}`); })\n  .then((config => Object.assign({}, configDefaults, config)))\n  .then((config) => {\n    I18nControler.init(config.defaultLanguage).then(() => {\n      const controller = new Controller(config);\n      const slideShow = new SlideShow(controller);\n      controller.loadData();\n\n      if (Object.entries(config.languages).length > 1) {\n        const langSwitcher = new LangSwitcher(\n          document.querySelector('.footer .utility'),\n          config,\n          (code) => { I18nControler.setLanguage(code); }\n        );\n      }\n\n      const id = new IdleDetector();\n      id.setTimeout(() => {\n        window.location.hash = '#intro';\n        window.location.reload();\n        controller.loadData();\n      },\n      1000 * config.idleReload);\n\n      // Disable dragging a elements\n      document.querySelectorAll('a')\n        .forEach((aElement) => {\n          aElement.addEventListener('dragstart', (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n          });\n        });\n    });\n  })\n  .catch(err => console.error(err));\n","/* eslint-disable no-param-reassign,no-restricted-properties */\nimport Slide from '../slide.js';\n\nexport default class DesignNetworkSlide extends Slide {\n  async onEnter() {\n    this.controller.testpaint = true;\n    let istraining = true;\n    let isBusy = false;\n    const d = document.querySelector('[data-slide=design-network] .train');\n    const resetadvancedoptions = () => {\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option, k) => {\n          option.classList.toggle('selected', k === 0);\n          if (k === 0) {\n            select.value = option.dataset.value;\n          }\n        });\n      });\n      d.querySelector('.learningrate').value = -3;\n      d.querySelector('.learningratetxt').innerHTML = '0.001';\n    };\n\n    resetadvancedoptions();\n\n    const els = {\n      trainingProgress: d.querySelector('.imagesused .number'),\n      // validationImages: d.querySelector('#validation-images'),\n      validationAccuracy: d.querySelector('.accuracy .number'),\n      input: d.querySelector('.traininputcanvas'),\n      network: d.querySelector('.simplenetwork > .network'),\n      activations: d.querySelector('.simplenetwork > .activations'),\n      bars: d.querySelector('.bars'),\n      paint: d.querySelector('.paint'),\n    };\n\n    const updateUI = () => {\n      istraining = (this.controller.nn && this.controller.nn.training);\n      if (this.controller.nn && this.controller.nn.trainedimages > 0) {\n        d.querySelector('.reset').classList.add('visible');\n      } else {\n        d.querySelector('.reset').classList.remove('visible');\n      }\n      d.querySelector('.paint').classList.toggle('visible', this.controller.testpaint);\n      d.querySelector('.training').classList.toggle('visible', !this.controller.testpaint);\n      if (this.controller.testpaint) {\n        if (this.controller.paint) {\n          this.controller.paint.clear();\n        }\n      }\n\n      const pr = d.querySelector('.pause-resume');\n\n      if (istraining) {\n        pr.classList.remove('resume');\n        pr.classList.add('pause');\n      } else {\n        pr.classList.add('resume');\n        pr.classList.remove('pause');\n      }\n\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option) => {\n          option.onpointerdown = () => {\n            if (select.value !== option.dataset.value) {\n              select.querySelectorAll('.option').forEach((ooption) => {\n                ooption.classList.toggle('selected', ooption === option);\n              });\n              select.value = option.dataset.value;\n              resetadvancednetwork();\n            }\n          };\n        });\n      });\n    };\n    updateUI();\n    /* buttons */\n    /*\n      if (d.querySelector(\".testit\")) d.querySelector(\".testit\").onpointerdown = async () => {\n        controller.testpaint = true;\n        updateUI();\n        await controller.pauseTraining();\n        updateUI();\n      };\n    */\n\n    d.querySelector('.pause-resume').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      istraining = !istraining;\n      await this.controller.toggleTraining(updateUI);\n      updateUI();\n      d.querySelector('.reset').classList.add('visible');\n      isBusy = false;\n    };\n\n    d.querySelector('.single-step').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      if (istraining) {\n        await this.controller.pauseTraining(updateUI);\n        // await controller.singleStep(updateUI);\n        istraining = false;\n      } else {\n        await this.controller.singleStep(updateUI);\n      }\n      updateUI();\n      isBusy = false;\n    };\n\n    d.querySelector('.reset').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      await this.controller.pauseTraining(updateUI);\n      await this.controller.resetTraining(els);\n      resetadvancednetwork();\n      updateUI();\n      isBusy = false;\n    };\n\n    /* expert mode */\n\n    const resetadvancednetwork = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      await this.controller.pauseTraining(updateUI);\n      const learningRate = Math.pow(10, d.querySelector('.learningrate').value);\n      d.querySelector('.learningratetxt').innerHTML = learningRate.toPrecision(1);\n      this.controller.resetNetwork(\n        d.querySelector('.modelid').value,\n        d.querySelector('.optimizerid').value,\n        learningRate,\n        d.querySelector('.activation').value\n      );\n      updateUI();\n      isBusy = false;\n    };\n\n    const rateSlider = d.querySelector('.learningrate');\n    const rateLabel = d.querySelector('.learningratetxt');\n    rateSlider.oninput = () => {\n      const rate = Math.pow(10, rateSlider.value);\n      rateLabel.innerText = rate.toPrecision(1);\n    };\n\n    d.querySelector('.learningrate').onchange = async () => {\n      resetadvancednetwork();\n    };\n\n    await this.controller.initTrainingEnvironment(els);\n    // controller.startTraining();\n    updateUI();\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n    await this.controller.pauseTraining();\n    this.controller.cleanupValidationPreview();\n    this.controller.cleanupNetwork();\n  }\n}\n\nSlide.registerClass('design-network', DesignNetworkSlide);\n","import Slide from '../slide.js';\n\nexport default class IntroSlide extends Slide {\n  async onEnter() {\n    await this.controller.initIntroPaint(this.element);\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n  }\n}\n\nSlide.registerClass('intro', IntroSlide);\n","/* eslint-disable no-param-reassign,no-restricted-properties */\nimport Slide from '../slide.js';\n\nexport default class TrainingSlide extends Slide {\n  async onEnter() {\n    this.controller.testpaint = true;\n    let istraining = true;\n    let isBusy = false;\n    const d = document.querySelector('[data-slide=training] .train');\n\n    const resetadvancedoptions = () => {\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option, k) => {\n          option.classList.toggle('selected', k === 0);\n          if (k === 0) {\n            select.value = option.dataset.value;\n          }\n        });\n      });\n      d.querySelector('.learningrate').value = -3;\n      d.querySelector('.learningratetxt').innerHTML = '0.001';\n    };\n\n    resetadvancedoptions();\n\n    const els = {\n      trainingProgress: d.querySelector('.imagesused .number'),\n      // validationImages: d.querySelector('#validation-images'),\n      validationAccuracy: d.querySelector('.accuracy .number'),\n      input: d.querySelector('.traininputcanvas'),\n      network: d.querySelector('.simplenetwork > .network'),\n      activations: d.querySelector('.simplenetwork > .activations'),\n      bars: d.querySelector('.bars'),\n      paint: d.querySelector('.paint'),\n    };\n\n    const updateUI = () => {\n      istraining = (this.controller.nn && this.controller.nn.training);\n      if (this.controller.nn && this.controller.nn.trainedimages > 0) {\n        d.querySelector('.reset').classList.add('visible');\n      } else {\n        d.querySelector('.reset').classList.remove('visible');\n      }\n      d.querySelector('.paint').classList.toggle('visible', this.controller.testpaint);\n      d.querySelector('.training').classList.toggle('visible', !this.controller.testpaint);\n      if (this.controller.testpaint) {\n        if (this.controller.paint) {\n          this.controller.paint.clear();\n        }\n      }\n\n      // d.querySelector(\".expertmode-on-off\").innerHTML = expertmode ? \"on\" : \"off\";\n\n      const pr = d.querySelector('.pause-resume');\n\n      if (istraining) {\n        pr.classList.remove('resume');\n        pr.classList.add('pause');\n      } else {\n        pr.classList.add('resume');\n        pr.classList.remove('pause');\n      }\n\n      d.querySelectorAll('.parameter .select').forEach((select) => {\n        select.querySelectorAll('.option').forEach((option) => {\n          option.onpointerdown = () => {\n            if (select.value !== option.dataset.value) {\n              select.querySelectorAll('.option').forEach((ooption) => {\n                ooption.classList.toggle('selected', ooption === option);\n              });\n              select.value = option.dataset.value;\n              resetadvancednetwork();\n            }\n          };\n        });\n      });\n    };\n    updateUI();\n    /* buttons */\n    /*\n      if (d.querySelector(\".testit\")) d.querySelector(\".testit\").onpointerdown = async () => {\n        controller.testpaint = true;\n        updateUI();\n        await controller.pauseTraining();\n        updateUI();\n      };\n    */\n\n    d.querySelector('.pause-resume').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      istraining = !istraining;\n      await this.controller.toggleTraining(updateUI);\n      updateUI();\n      d.querySelector('.reset').classList.add('visible');\n      isBusy = false;\n    };\n\n    d.querySelector('.single-step').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      if (istraining) {\n        await this.controller.pauseTraining(updateUI);\n        // await controller.singleStep(updateUI);\n        istraining = false;\n      } else {\n        await this.controller.singleStep(updateUI);\n      }\n      updateUI();\n      isBusy = false;\n    };\n\n    d.querySelector('.reset').onpointerdown = async () => {\n      if (isBusy) {\n        return;\n      }\n      isBusy = true;\n      await this.controller.pauseTraining(updateUI);\n      await this.controller.resetTraining(els);\n      await resetadvancednetwork();\n      updateUI();\n      isBusy = false;\n    };\n\n    /* expert mode */\n\n    const resetadvancednetwork = async () => {\n      await this.controller.pauseTraining(updateUI);\n      const learningRate = Math.pow(10, d.querySelector('.learningrate').value);\n      d.querySelector('.learningratetxt').innerHTML = learningRate.toPrecision(1);\n      this.controller.resetNetwork(\n        d.querySelector('.modelid').value,\n        d.querySelector('.optimizerid').value,\n        learningRate,\n        d.querySelector('.activation').value\n      );\n      updateUI();\n    };\n\n    const rateSlider = d.querySelector('.learningrate');\n    const rateLabel = d.querySelector('.learningratetxt');\n    rateSlider.oninput = () => {\n      const rate = Math.pow(10, rateSlider.value);\n      rateLabel.innerText = rate.toPrecision(1);\n    };\n\n    d.querySelector('.learningrate').onchange = async () => {\n      await resetadvancednetwork();\n    };\n\n    await this.controller.initTrainingEnvironment(els);\n    // controller.startTraining();\n    updateUI();\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n    await this.controller.pauseTraining();\n    this.controller.cleanupValidationPreview();\n    this.controller.cleanupNetwork();\n  }\n}\n\nSlide.registerClass('training', TrainingSlide);\n","import Slide from '../slide.js';\n\nexport default class WhatIsTrainingDataSlide extends Slide {\n  async onEnter() {\n    await this.controller.initIntroPaint(document.querySelector('#normalizepaint'));\n  }\n\n  async onExit() {\n    this.controller.cleanupPaint();\n  }\n}\n\nSlide.registerClass('what-is-training-data', WhatIsTrainingDataSlide);\n","/* eslint-disable class-methods-use-this */\nexport default class Slide {\n  constructor(element, controller) {\n    this.element = element;\n    this.controller = controller;\n  }\n\n  async onEnter() {\n    return Promise.resolve();\n  }\n\n  async onExit() {\n    return Promise.resolve();\n  }\n}\n\nSlide.slideClasses = {};\n\nSlide.registerClass = (id, slideClass) => {\n  Slide.slideClasses[id] = slideClass;\n}\n\nSlide.getClass = id => Slide.slideClasses[id];\n"]}